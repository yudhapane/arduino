// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gui_overlay_config.proto

#ifndef PROTOBUF_gui_5foverlay_5fconfig_2eproto__INCLUDED
#define PROTOBUF_gui_5foverlay_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#pragma GCC system_header
#include <boost/shared_ptr.hpp>
#include "gazebo/msgs/MsgFactory.hh"
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gui_5foverlay_5fconfig_2eproto();
void protobuf_AssignDesc_gui_5foverlay_5fconfig_2eproto();
void protobuf_ShutdownFile_gui_5foverlay_5fconfig_2eproto();

class GUIOverlayConfig;

// ===================================================================

class GUIOverlayConfig : public ::google::protobuf::Message {
 public:
  GUIOverlayConfig();
  virtual ~GUIOverlayConfig();

  GUIOverlayConfig(const GUIOverlayConfig& from);

  inline GUIOverlayConfig& operator=(const GUIOverlayConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GUIOverlayConfig& default_instance();

  void Swap(GUIOverlayConfig* other);

  // implements Message ----------------------------------------------

  GUIOverlayConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GUIOverlayConfig& from);
  void MergeFrom(const GUIOverlayConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string layout_filename = 1;
  inline bool has_layout_filename() const;
  inline void clear_layout_filename();
  static const int kLayoutFilenameFieldNumber = 1;
  inline const ::std::string& layout_filename() const;
  inline void set_layout_filename(const ::std::string& value);
  inline void set_layout_filename(const char* value);
  inline void set_layout_filename(const char* value, size_t size);
  inline ::std::string* mutable_layout_filename();
  inline ::std::string* release_layout_filename();
  inline void set_allocated_layout_filename(::std::string* layout_filename);

  // @@protoc_insertion_point(class_scope:gazebo.msgs.GUIOverlayConfig)
 private:
  inline void set_has_layout_filename();
  inline void clear_has_layout_filename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* layout_filename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gui_5foverlay_5fconfig_2eproto();
  friend void protobuf_AssignDesc_gui_5foverlay_5fconfig_2eproto();
  friend void protobuf_ShutdownFile_gui_5foverlay_5fconfig_2eproto();

  void InitAsDefaultInstance();
  static GUIOverlayConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// GUIOverlayConfig

// required string layout_filename = 1;
inline bool GUIOverlayConfig::has_layout_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GUIOverlayConfig::set_has_layout_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GUIOverlayConfig::clear_has_layout_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GUIOverlayConfig::clear_layout_filename() {
  if (layout_filename_ != &::google::protobuf::internal::kEmptyString) {
    layout_filename_->clear();
  }
  clear_has_layout_filename();
}
inline const ::std::string& GUIOverlayConfig::layout_filename() const {
  return *layout_filename_;
}
inline void GUIOverlayConfig::set_layout_filename(const ::std::string& value) {
  set_has_layout_filename();
  if (layout_filename_ == &::google::protobuf::internal::kEmptyString) {
    layout_filename_ = new ::std::string;
  }
  layout_filename_->assign(value);
}
inline void GUIOverlayConfig::set_layout_filename(const char* value) {
  set_has_layout_filename();
  if (layout_filename_ == &::google::protobuf::internal::kEmptyString) {
    layout_filename_ = new ::std::string;
  }
  layout_filename_->assign(value);
}
inline void GUIOverlayConfig::set_layout_filename(const char* value, size_t size) {
  set_has_layout_filename();
  if (layout_filename_ == &::google::protobuf::internal::kEmptyString) {
    layout_filename_ = new ::std::string;
  }
  layout_filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GUIOverlayConfig::mutable_layout_filename() {
  set_has_layout_filename();
  if (layout_filename_ == &::google::protobuf::internal::kEmptyString) {
    layout_filename_ = new ::std::string;
  }
  return layout_filename_;
}
inline ::std::string* GUIOverlayConfig::release_layout_filename() {
  clear_has_layout_filename();
  if (layout_filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = layout_filename_;
    layout_filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GUIOverlayConfig::set_allocated_layout_filename(::std::string* layout_filename) {
  if (layout_filename_ != &::google::protobuf::internal::kEmptyString) {
    delete layout_filename_;
  }
  if (layout_filename) {
    set_has_layout_filename();
    layout_filename_ = layout_filename;
  } else {
    clear_has_layout_filename();
    layout_filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


typedef boost::shared_ptr<gazebo::msgs::GUIOverlayConfig> GUIOverlayConfigPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

typedef const boost::shared_ptr<gazebo::msgs::GUIOverlayConfig const> ConstGUIOverlayConfigPtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gui_5foverlay_5fconfig_2eproto__INCLUDED
